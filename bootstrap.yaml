---
- name: VM Onboarding
  hosts: new_vms
  become: yes
  become_method: sudo
  gather_facts: yes
  vars:
    ansible_become_password: "{{ ansible_password }}"
    admin_user: admin
    admin_group: admin
    ssh_port: 22
    allowed_ports:
      - 22
      - 80
      - 443
    packages:
      - vim
      - curl
      - wget
      - htop
      - net-tools
      - unzip
      - git

  pre_tasks:
    - name: Ensure sudo access
      raw: sudo -n true
      register: sudo_check
      failed_when: sudo_check.rc != 0
      changed_when: false
      ignore_errors: yes

    - name: Clear APT locks using sudo
      command: "sudo rm -f /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/lib/dpkg/lock*"
      args:
        removes: /var/lib/apt/lists/lock
      become: yes
      ignore_errors: yes

    - name: Reconfigure dpkg
      command: sudo dpkg --configure -a
      become: yes
      ignore_errors: yes

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: yes
      register: apt_update
      retries: 3
      delay: 5
      until: apt_update is success

    - name: Install essential packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      become: yes
      register: pkg_install
      retries: 3
      delay: 5
      until: pkg_install is success

    - name: Set timezone
      timezone:
        name: UTC
      become: yes

    - name: Create admin group
      group:
        name: "{{ admin_group }}"
        state: present
      become: yes

    - name: Create admin user
      user:
        name: "{{ admin_user }}"
        groups: "{{ admin_group }}"
        shell: /bin/bash
        createhome: yes
        generate_ssh_key: yes
        ssh_key_bits: 4096
      become: yes

    - name: Configure sudo access
      lineinfile:
        path: /etc/sudoers.d/admin
        line: "%{{ admin_group }} ALL=(ALL) NOPASSWD: ALL"
        create: yes
        validate: 'visudo -cf %s'
        mode: '0440'
      become: yes

    - name: Configure UFW allowed ports
      ufw:
        rule: allow
        port: "{{ item }}"
      loop: "{{ allowed_ports }}"
      become: yes

  handlers:
    - name: restart ssh
      service:
        name: sshd
        state: restarted
      become: yes

    - name: restart ntp
      service:
        name: ntp
        state: restarted
      become: yes