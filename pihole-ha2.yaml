---
- name: Configure Pi-hole HA with Embedded Templates
  hosts: pihole_cluster
  become: yes
  vars:
    ansible_remote_tmp: /tmp/.ansible
    vip: 192.168.20.254
    interface: "{{ ansible_default_ipv4.interface }}"
    virtual_router_id: 51
    ssh_user: adminuser
    nodes:
      master:
        ip: 192.168.20.193
        priority: 150
      backup:
        ip: 192.168.20.191
        priority: 100

  tasks:
    # Cleanup existing config
    - name: Remove previous configurations
      block:
        - name: Remove sync cron
          cron:
            name: "Pi-hole Config Sync"  # Fixed name consistency
            state: absent

        - name: Remove Keepalived config
          file:
            path: /etc/keepalived/keepalived.conf
            state: absent

        - name: Stop Keepalived
          service:
            name: keepalived
            state: stopped
            enabled: no

    # Install required packages
    - name: Install dependencies
      apt:
        name: ["keepalived", "rsync", "sshpass"]
        state: latest
        update_cache: yes

    # Configure Keepalived
    - name: Deploy Keepalived configuration
      template:
        src: keepalived.conf.j2  # Better to use template file
        dest: /etc/keepalived/keepalived.conf
        mode: 0644
      notify: restart keepalived

    # VRRP notification script
    - name: Deploy VRRP notify script
      copy:
        dest: /usr/local/bin/vrrp-notify.sh
        mode: 0755
        content: |
          #!/bin/bash
          TYPE=$1
          NAME=$2
          STATE=$3

          case $STATE in
              "MASTER")
                  systemctl start pihole-FTL
                  ;;
              "BACKUP"|"FAULT")
                  systemctl stop pihole-FTL
                  ;;
              *)
                  ;;
          esac

    # DHCP configuration
    - name: Configure DHCP DNS option
      copy:
        dest: /etc/pihole/dnsmasq.d/02-pihole-dhcp.conf
        content: "dhcp-option=6,{{ vip }}"
        mode: 0644

    # Enhanced sync script
    - name: Create sync script
      copy:
        dest: /usr/local/bin/pihole-sync.sh
        mode: 0755
        content: |
          #!/bin/bash
          NODES=({{ nodes.master.ip }} {{ nodes.backup.ip }})
          CURRENT_NODE_IP={{ nodes[inventory_hostname].ip }}
          CONFIG_FILES=(
            "/etc/pihole/setupVars.conf"
            "/etc/pihole/dhcp.leases"
            "/etc/pihole/dnsmasq.d/02-pihole-dhcp.conf"
            "/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf"
          )

          for node in "${NODES[@]}"; do
            if [ "$node" != "$CURRENT_NODE_IP" ] && ip a show dev {{ interface }} | grep -q {{ vip }}; then
              rsync -e "ssh -o StrictHostKeyChecking=no -i /home/{{ ssh_user }}/.ssh/id_ed25519" -az --delete \
                "${CONFIG_FILES[@]}" \
                {{ ssh_user }}@$node:/etc/pihole/
              ssh -i /home/{{ ssh_user }}/.ssh/id_ed25519 {{ ssh_user }}@$node "sudo systemctl restart pihole-FTL"
            fi
          done

    # Configure cron job
    - name: Set up sync cron
      cron:
        name: "Pi-hole Config Sync"
        job: "/usr/local/bin/pihole-sync.sh"
        user: "{{ ssh_user }}"  # Run as dedicated user
        minute: "*/5"

    # SSH setup improvements
    - name: Setup SSH user
      user:
        name: "{{ ssh_user }}"
        groups: sudo
        shell: /bin/bash
        generate_ssh_key: yes
        ssh_key_type: ed25519
        ssh_key_file: ".ssh/id_ed25519"  # Explicit key path

    - name: Deploy SSH key
      authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ lookup('file', '/home/{{ ssh_user }}/.ssh/id_ed25519.pub') }}"
        manage_dir: yes

    - name: Configure sudo access
      copy:
        dest: /etc/sudoers.d/{{ ssh_user }}
        content: |
          # Limited sudo for pihole sync
          {{ ssh_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart pihole-FTL
        validate: 'visudo -cf %s'

    # Service management
    - name: Start Keepalived
      service:
        name: keepalived
        state: started
        enabled: yes

  handlers:
    - name: restart keepalived
      service:
        name: keepalived
        state: restarted
